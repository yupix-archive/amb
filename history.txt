1代目vcheck(多分)
#使用不可になった理由:
#多くのバグを含めており、既にコメントアウトされて時間が立つため。
廃止日:2020/2/13
vcheck() {
    #旧バージョン
    curl -sl https://akari.fiid.net/app/amb/newversion.txt >newversion.txt
    if [ $version = $newversion ]; then
        echo '現在のambは最新バージョンで実行中です'
    else
        read -p "最新のデータをダウンロードしますか?" Newversiondata
        case "$Newversiondata" in
        [yY])
            #本番用
            echo "ファイルのダウンロードを開始します"
            wget https://github.com/yupix/amb/releases/download/$newversion/amb$newversion-linux.zip
            mv ./amb$newversion-Linux.zip ../amb$newversion-Linux.zip
            cd ../
            rm -r ./amb
            unzip ./amb$newversion-Linux.zip
            rm -r ./amb$newversion-Linux.zip
            mv ./amb$newversion-Linux ./amb
            ;;
        [tT])
            #動作テスト用
            curl -OL https://akari.fiid.net/app/releases/download/$newversion/amb$newversion-Linux.zip
            mv ./amb$newversion-Linux.zip ../amb$newversion-Linux.zip
            cd ../
            rm -r ./amb
            unzip ./amb$newversion-Linux.zip
            rm -r ./amb$newversion-Linux.zip
            mv ./amb$newversion-Linux ./amb

            ;;
        [nN])
            echo "アップデートをキャンセルしました"
            ;;
        esac
    fi
}


#2代目スタートコマンド
#使用不可になった理由:
#多くのバグを抱えており、一から書き直したほうが早いため。
廃止日:2020/1/25
start)
    firststart
    if [ yes = $setting_outputdata ]; then
        autoreconfig
        if [ -z "$CLIENT_ID" ]; then
            echo "CLIENT_IDを入力してください"
            read INPUT_CLIENTID
            sed -i -e 's/CLIENT_ID="'$CLIENT_ID'"/CLIENT_ID="'$INPUT_CLIENTID'"/g' ./assets/settings.txt
            echo "BOTの招待URL: https://discordapp.com/api/oauth2/authorize?client_id=$INPUT_CLIENTID&permissions=8&scope=bot"
            if [ yes = $setting_VersionCheck ]; then
                versioncheck
            else
                botstart
            fi
        fi
        if [ -z "$CLIENT_ID" ]; then
            echo "CLIENT_IDを入力してください"
            read INPUT_CLIENTID
            sed -i -e 's/CLIENT_ID="'$CLIENT_ID'"/CLIENT_ID="'$INPUT_CLIENTID'"/g' ./assets/settings.txt
            echo "BOTの招待URL: https://discordapp.com/api/oauth2/authorize?client_id=$INPUT_CLIENTID&permissions=8&scope=bot"
            if [ yes = $setting_VersionCheck ]; then
                versioncheck
            else
                botstart
            fi
        else
            if [ yes = $setting_botinvite ]; then
                echo "BOTの招待URL: https://discordapp.com/api/oauth2/authorize?client_id=$CLIENT_ID&permissions=8&scope=bot"
                if [ yes = $setting_VersionCheck ]; then
                    versioncheck
                else
                    botstart
                fi
            else
                if [ yes = $setting_VersionCheck ]; then
                    versioncheck
                else
                    botstart
                fi
            fi
            #VersionCheckが終わった際最終的にここでBot起動
            botstart
        fi
    fi

    ;;

#初代設定コマンド
#使用不可になった理由:
#キー入力に y/n以外を打つことができ、設定が壊れてしまうため
廃止日:2020/1/25

    [1])
        #        echo "SettingsFileの有無を確認しています"
        #        if [ -e ./assets/settings.txt ]; then
        #            echo "使用可能: yes/no"
        #            read updatecheck
        #            if [ $updatecheck = $setting_VersionCheck ]; then
        #                echo "既に設定は "$setting_VersionCheck" に選択されています"
        #            else
        #                sed -i -e 's/setting_VersionCheck="'$setting_VersionCheck'"/setting_VersionCheck="'$updatecheck'"/' ./assets/settings.txt
        #                if [ $updatecheck = $setting_VersionCheck ]; then
        #                    echo "変更に失敗しました..."
        #                else
        #                    echo "変更に成功しました!"
        #                fi
        #            fi
        #        else
        #            echo "SettingsFileが存在しません..."
        #            echo "exit 1"
        #        fi
;;

    [2])

        #        echo "SettingsFileの有無を確認しています"
        #        if [ -e ./assets/settings.txt ]; then
        #            echo "使用可能: yes/no"
        #            read settingCLIENTID
        #            if [ $settingCLIENTID = $setting_botinvite ]; then
        #               echo "既に設定は "$setting_botinvite" に選択されています"
        #            else
        #                sed -i -e 's/setting_botinvite="'$setting_botinvite'"/setting_botinvite="'$settingCLIENTID'"/' ./assets/settings.txt
        #                if [ $settingCLIENTID = $setting_botinvite ]; then
        #                    echo "変更に失敗しました..."
        #                else
        #                    echo "変更に成功しました!"
        #                fi
        #            fi
        #        else
        #            echo "SettingsFileが存在しません..."
        #            echo "exit 1"
        #        fi
;;

    [3])
        #        echo "SettingsFileの有無を確認しています"
        #        if [ -e ./assets/settings.txt ]; then
        #            echo "使用可能: yes/no"
        #            read settingoutputin
        #            if [ $settingoutputin = $setting_outputdata ]; then
        #                echo "既に設定は "$setting_outputdata" に選択されています"
        #            else
        #                sed -i -e 's/setting_outputdata="'$setting_outputdata'"/setting_outputdata="'$settingoutputin'"/' ./assets/settings.txt
        #                if [ $settingoutputin = $setting_outputdata ]; then
        #                    echo "変更に失敗しました..."
        #                else
        #                    echo "変更に成功しました!"
        #                fi
        #            fi
        #        else
        #            echo "SettingsFileが存在しません..."
        #            echo "exit 1"
        #        fi
;;

    [4])
        #        echo "SettingsFileの有無を確認しています"
        #        if [ -e ./assets/settings.txt ]; then
        #            echo "使用可能: yes/no"
        #            read settinginputbackup
        #            if [ $settinginputbackup = $setting_backuptime ]; then
        #                echo "既に設定は "$setting_backuptime" に選択されています"
        #            else
        #                sed -i -e 's/setting_backuptime="'$setting_backuptime'"/setting_backuptime="'$settinginputbackup'"/' ./assets/settings.txt
        #                if [ $settinginputbackup = $setting_backuptime ]; then
        #                    echo "変更に失敗しました..."
        #                else
        #                    echo "設定を$settinginputbackupに変更しました"
        #                fi
        #            fi
        #        else
        #            echo "SettingsFileが存在しません..."
        #            echo "exit 1"
        #        fi
        #        ;;
;;

#初代から起動時内部で動いてた物(botstartに当たるもの)
#使用不可になった理由:
不正なキー入力を受け付ける可能性があったり、コードの可読性を上げるため作り直しが決定
廃止日:2020/1/26
#    while :; do
#        if [ -e $SYSTEMFILE ]; then
#            for ((i = 0; i < ${#chars}; i++)); do
#                sleep 0.2
#                echo -en "${chars:$i:1} SYSTEMファイルの確認 1/2" "\r"
#            done
#            echo "SYSTEMファイルの確認に成功! 1/2"
#            if [ -e $SYSTEMFILEMUSIC ]; then
#                for ((i = 0; i < ${#chars}; i++)); do
#                    sleep 0.2
#                    echo -en "${chars:$i:1} SYSTEMファイルの確認 2/2" "\r"
#                done
#                echo "SYSTEMファイルの確認に成功! 2/2"
#                echo "$SYSTEMSTART"
#                systemstart
#            else
#                for ((i = 0; i < ${#chars}; i++)); do
#                    sleep 0.2
#                    echo -en "${chars:$i:1} 設定ファイルの有無を確認中..." "\r"
#                done
#                echo "$FILECHECKFAILED"
#                echo "$FAILECREATE"
#                mkdir "discord/music/"
#               echo "$SYSTEMSTART"
#                systemstart
#            fi
#            break
#            echo "SYSTEMFILEが欠落しています"
#            mkdir "discord"
#            echo "$FILECREATESUCCESS"
#            echo "ファイルを確認中 2/2"
#            if [ -e $SYSTEMFILEMUSIC ]; then
#               echo "$FILECHECKSUCCSESS"
#                echo "$SYSTEMSTART"
#                systemstart
#            else
#                echo "$FILECHECKFAILED"
#                echo "$FAILECREATE"
#                mkdir "discord/music/"
#                echo "$SYSTEMSTART"
#                systemstart
#            fi
#            if [ -e $SYSTEMFILE ]; then
#                echo "$FILECHECKSUCCSESS"
#                echo "$SYSTEMSTART"
#                systemstart
#                echo "ファイルを確認中 2/2"
#                if [ -e $SYSTEMFILEMUSIC ]; then
#                    echo "ファイル"
#                else
#                    echo "test"
#                fi
#            fi
#        fi
#    done


#reconfigコマンドの中身
#使用不可になった理由:
今作ったほうが、不具合等を少なく作れる可能性が高いため。
廃止日:2020/1/26
reconfig)
    firststart
    rm -r ./assets/outdate.txt
    sleep 1
    echo "$FAILEDELETENOW"
    echo "ファイルが削除できているか確認しています..."
    if [ -e $outputdata ]; then
        echo "ファイル削除を確認しました..."
        echo "ファイルの生成を開始します..."
        cat ${target} | awk -f ./lib/convert.awk >./assets/outdate.txt
    else
        echo "ファイルが存在しないため"
    fi
    if [ -e ./assets/outdate.txt ]; then
        echo "$FILECREATESUCCESS"
    else
        echo "$FILECREATEFAILED"
        read -p "再試行しますか? (y/n)" RETRY
        case "$RETRY" in
        [yY])
            cat ${target} | awk -f ./lib/convert.awk >./assets/outdate.txt
            if [ -e ./assets/outdate.txt ]; then
                echo "$FILECREATESUCCESS"
            else
                echo "ファイルの削除に失敗しました。"
                echo "ファイルの生成に合計2回失敗したため、サービスを終了します"
                echo "再度実行し、ファイルの生成に失敗する場合は製作者に報告を宜しくおねがいします"
            fi
            ;;
        [nN])
            echo "$ENDSERVICE"
            ;;
        esac
    fi
    ;;